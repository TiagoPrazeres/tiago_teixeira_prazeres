# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dadosProduto.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


### Imports sistema ###
import mysql.connector
import pandas as pd

import tkinter
from tkinter import messagebox

### Arquivo variáveis de controle ###
import variaveisControle

### Variáveis de conexão com o banco de dados ###
host = variaveisControle.host
user = variaveisControle.user
password = variaveisControle.password
database = variaveisControle.database


class Ui_formDadosProdutos(object):
    def setupUi(self, formDadosProdutos):
        formDadosProdutos.setObjectName("formDadosProdutos")
        formDadosProdutos.resize(630, 506)
        formDadosProdutos.setStyleSheet("background-color: rgb(129, 181, 200);")
        self.lb_nomeProduto = QtWidgets.QLabel(formDadosProdutos)
        self.lb_nomeProduto.setGeometry(QtCore.QRect(30, 73, 141, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lb_nomeProduto.setFont(font)
        self.lb_nomeProduto.setObjectName("lb_nomeProduto")
        self.lb_tipo = QtWidgets.QLabel(formDadosProdutos)
        self.lb_tipo.setGeometry(QtCore.QRect(30, 253, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lb_tipo.setFont(font)
        self.lb_tipo.setObjectName("lb_tipo")
        self.txt_produto = QtWidgets.QLineEdit(formDadosProdutos)
        self.txt_produto.setGeometry(QtCore.QRect(170, 80, 431, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txt_produto.setFont(font)
        self.txt_produto.setStyleSheet("border-radius: 15px;\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: outset;\n"
"border-color: black;\n"
"border-width: 1px")
        self.txt_produto.setText("")
        self.txt_produto.setObjectName("txt_produto")
        self.txt_valor = QtWidgets.QLineEdit(formDadosProdutos)
        self.txt_valor.setGeometry(QtCore.QRect(170, 170, 431, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txt_valor.setFont(font)
        self.txt_valor.setStyleSheet("border-radius: 15px;\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: outset;\n"
"border-color: black;\n"
"border-width: 1px")
        self.txt_valor.setText("")
        self.txt_valor.setObjectName("txt_valor")
        self.txt_tipo = QtWidgets.QLineEdit(formDadosProdutos)
        self.txt_tipo.setGeometry(QtCore.QRect(170, 260, 431, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.txt_tipo.setFont(font)
        self.txt_tipo.setStyleSheet("border-radius: 15px;\n"
"background-color: rgb(255, 255, 255);\n"
"border-style: outset;\n"
"border-color: black;\n"
"border-width: 1px")
        self.txt_tipo.setText("")
        self.txt_tipo.setObjectName("txt_tipo")
        self.lb_valor = QtWidgets.QLabel(formDadosProdutos)
        self.lb_valor.setGeometry(QtCore.QRect(30, 163, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lb_valor.setFont(font)
        self.lb_valor.setObjectName("lb_valor")
        self.bt_cadastrar = QtWidgets.QPushButton(formDadosProdutos)
        self.bt_cadastrar.setGeometry(QtCore.QRect(150, 360, 111, 81))
        self.bt_cadastrar.setStyleSheet("image: url(:/confirmar/imagens/confirmar.png);\n"
"background-color: rgb(173, 200, 202);")
        self.bt_cadastrar.setText("")
        self.bt_cadastrar.setObjectName("bt_cadastrar")
        self.bt_cancelar = QtWidgets.QPushButton(formDadosProdutos)
        self.bt_cancelar.setGeometry(QtCore.QRect(360, 360, 111, 81))
        self.bt_cancelar.setStyleSheet("image: url(:/cancelar/imagens/cancelar.png);\n"
"background-color: rgb(173, 200, 202);")
        self.bt_cancelar.setText("")
        self.bt_cancelar.setObjectName("bt_cancelar")

        self.retranslateUi(formDadosProdutos)
        QtCore.QMetaObject.connectSlotsByName(formDadosProdutos)

    def retranslateUi(self, formDadosProdutos):
        _translate = QtCore.QCoreApplication.translate
        formDadosProdutos.setWindowTitle(_translate("formDadosProdutos", "Produto"))
        self.lb_nomeProduto.setText(_translate("formDadosProdutos", "Nome Produto:"))
        self.lb_tipo.setText(_translate("formDadosProdutos", "Tipo Produto:"))
        self.lb_valor.setText(_translate("formDadosProdutos", "Valor Produto:"))
        self.bt_cadastrar.setToolTip(_translate("formDadosProdutos", "<html><head/><body><p><img src=\":/confirmar/imagens/confirmar.png\"/></p></body></html>"))
        self.bt_cancelar.setToolTip(_translate("formDadosProdutos", "<html><head/><body><p><img src=\":/cancelar/imagens/cancelar.png\"/></p></body></html>"))

##################################################################################################
######################################### BOTÕES SISTEMA #########################################
##################################################################################################

        self.bt_cancelar.clicked.connect(lambda: self.sairTela(formDadosProdutos))
        if variaveisControle.tipoTelaDadosProduto == 'incluir':
            self.bt_cadastrar.clicked.connect(self.cadastrarProduto)
        if variaveisControle.tipoTelaDadosProduto == 'alterar':
            self.bt_cadastrar.clicked.connect(self.alterarProduto)

        ### Condições da tela ###
        ## Tipo form tela ##
        if variaveisControle.tipoTelaDadosProduto == 'incluir':
            self.txt_produto.setEnabled(True)
            self.txt_valor.setEnabled(True)
            self.txt_tipo.setEnabled(True)
            self.bt_cadastrar.setEnabled(True)
        elif variaveisControle.tipoTelaDadosProduto == 'consultar':
            self.txt_produto.setEnabled(False)
            self.txt_valor.setEnabled(False)
            self.txt_tipo.setEnabled(False)
            self.bt_cadastrar.setEnabled(False)
            # Conexão com o banco de dados #
            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
            )
            mycursor = mydb.cursor()
            consultaSQL = "SELECT * FROM produto WHERE idProduto = '" + variaveisControle.idConsulta + "'"
            mycursor.execute(consultaSQL)
            myresult = mycursor.fetchall()
            mycursor.close()
            # Converte resultados BD para DataFrame #
            df = pd.DataFrame(myresult, columns = ['ID', 'Nome', 'Valor', 'Tipo'])
            nomeProduto = df['Nome'][0]
            valorProduto = df['Valor'][0]
            tipoProduto = df['Tipo'][0]
            # Seta variáveis na tela do sistema #
            self.txt_produto.setText(nomeProduto)
            self.txt_valor.setText(valorProduto)
            self.txt_tipo.setText(tipoProduto)
        elif variaveisControle.tipoTelaDadosProduto == 'alterar':
            self.txt_produto.setEnabled(True)
            self.txt_valor.setEnabled(True)
            self.txt_tipo.setEnabled(True)
            self.bt_cadastrar.setEnabled(True)
            # Conexão com o banco de dados #
            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
            )
            mycursor = mydb.cursor()
            consultaSQL = "SELECT * FROM produto WHERE idProduto = '" + variaveisControle.idConsulta + "'"
            mycursor.execute(consultaSQL)
            myresult = mycursor.fetchall()
            mycursor.close()
            # Converte resultados BD para DataFrame #
            df = pd.DataFrame(myresult, columns = ['ID', 'Nome', 'Valor', 'Tipo'])
            nomeProduto = df['Nome'][0]
            valorProduto = df['Valor'][0]
            tipoProduto = df['Tipo'][0]
            # Seta variáveis na tela do sistema #
            self.txt_produto.setText(nomeProduto)
            self.txt_valor.setText(valorProduto)
            self.txt_tipo.setText(tipoProduto)

##################################################################################################
##################################### FUNÇÕES DO SISTEMA #########################################
##################################################################################################

    ## Sair dadosProduto ##
    def sairTela(self, formDadosProduto):
        variaveisControle.tipoTelaDadosProduto == ''
        formDadosProduto.close()

    ## CADASTRAR PRODUTO ##
    def cadastrarProduto(self):
        nomeProduto = self.txt_produto.text()
        valorProduto = self.txt_valor.text()
        tipoProduto = self.txt_tipo.text()
        root = tkinter.Tk()
        root.withdraw()

        if nomeProduto == "" or valorProduto == "" or tipoProduto == "":
            messagebox.showerror("Erro ao Cadastrar", "PREENCHA TODOS OS CAMPOS PARA CADASTRAR")
        else:

            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
            )

            mycursor = mydb.cursor()
            sql = "INSERT INTO produto (Nome, Valor, Tipo) values (%s,  %s, %s)"
            val = (nomeProduto, valorProduto, tipoProduto)
            mycursor.execute(sql, val)
            mydb.commit()
            mycursor.close()
            self.txt_produto.setText("")
            self.txt_valor.setText("")
            self.txt_tipo.setText("")
            messagebox.showinfo("Cadastrado", "CADASTRADO COM SUCESSO")

        ## ALTERAR PRODUTO ##
    def alterarProduto(self):
        nomeProduto = self.txt_produto.text()
        valorProduto = self.txt_valor.text()
        tipoProduto = self.txt_tipo.text()
        root = tkinter.Tk()
        root.withdraw()

        if nomeProduto == "" or valorProduto == "" or tipoProduto == "":
                messagebox.showerror("Erro ao Alterar", "PREENCHA TODOS OS CAMPOS PARA ALTERAR")
        else:

            mydb = mysql.connector.connect(
                host = host,
                user = user,
                password = password,
                database = database
            )

            mycursor = mydb.cursor()
            sql = "UPDATE produto SET Nome = '" + nomeProduto + "', Valor = '" + valorProduto + "', Tipo = '" + tipoProduto + "' WHERE idProduto = '" + variaveisControle.idConsulta + "'"
            mycursor.execute(sql)
            mydb.commit()
            mycursor.close()
            messagebox.showinfo("Alterado", "ALTERADO COM SUCESSO")

import cancelar
import confirmar


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    formDadosProdutos = QtWidgets.QWidget()
    ui = Ui_formDadosProdutos()
    ui.setupUi(formDadosProdutos)
    formDadosProdutos.show()
    sys.exit(app.exec_())
